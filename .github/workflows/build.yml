name: 编译 luci-app-pushbot

on:
  push:
    branches: [ master, testing ]
    paths-ignore:
      - '**.md'
  workflow_dispatch:

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: ARM64-斐讯N1
            sdk: https://downloads.openwrt.org/releases/22.03.6/targets/armvirt/64/openwrt-sdk-22.03.6-armvirt-64_gcc-11.2.0_musl.Linux-x86_64.tar.xz
            arch: aarch64_cortex-a53
          - name: x86-64-软路由
            sdk: https://downloads.openwrt.org/releases/22.03.6/targets/x86/64/openwrt-sdk-22.03.6-x86-64_gcc-11.2.0_musl.Linux-x86_64.tar.xz
            arch: x86_64

    name: ${{ matrix.name }}

    steps:
      - name: 检出代码
        uses: actions/checkout@v4
      
      - name: 环境准备
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential gawk gettext libncurses5-dev libssl-dev zlib1g-dev file wget
          sudo mkdir -p /workdir && sudo chown $USER /workdir

      - name: 下载 SDK
        working-directory: /workdir
        run: |
          wget -q ${{ matrix.sdk }}
          tar xf *.tar.xz && rm *.tar.xz
          mv openwrt-sdk-* openwrt


      - name: 加载插件代码
        working-directory: /workdir/openwrt
        run: |
          mkdir -p package/custom/luci-app-pushbot
          cp -r $GITHUB_WORKSPACE/* package/custom/luci-app-pushbot/
          rm -rf package/custom/luci-app-pushbot/.git*

      - name: 配置编译选项
        working-directory: /workdir/openwrt
        run: |
          make defconfig
          echo "CONFIG_PACKAGE_luci-app-pushbot=m" >> .config

      - name: 编译插件
        id: compile
        working-directory: /workdir/openwrt
        run: |
          # 编译插件（自动处理依赖）
          make package/custom/luci-app-pushbot/compile -j$(nproc) V=s || make package/custom/luci-app-pushbot/compile -j1 V=s
          
          echo "ok=1" >> $GITHUB_OUTPUT
          echo "DATE=$(date +%Y.%m.%d-%H%M)" >> $GITHUB_ENV

      - name: 整理插件
        id: organize
        if: steps.compile.outputs.ok == '1'
        run: |
          # 查找并复制 IPK 文件
          IPK_FILE=$(find /workdir/openwrt/bin/packages/ -name "luci-app-pushbot*.ipk" | head -1)
          if [ -z "$IPK_FILE" ]; then
            echo "错误: 未找到 luci-app-pushbot IPK 文件"
            exit 1
          fi
          
          echo "找到 IPK 文件: $IPK_FILE"
          
          # 创建发布目录
          mkdir -p /tmp/release
          
          # 复制主 IPK 文件
          cp "$IPK_FILE" /tmp/release/
          
          # 查找并复制依赖的 IPK 文件
          find /workdir/openwrt/bin/packages/ -name "luci-compat*.ipk" -exec cp {} /tmp/release/ \;
          find /workdir/openwrt/bin/packages/ -name "luci-lib-*.ipk" -exec cp {} /tmp/release/ \;
          
          # 重命名主文件
          cd /tmp/release
          MAIN_FILE=$(ls luci-app-pushbot*.ipk | head -1)
          mv "$MAIN_FILE" "luci-app-pushbot_${{matrix.arch}}_${{env.DATE}}.ipk"
          
          echo "发布文件列表:"
          ls -la /tmp/release/
          
          echo "status=success" >> $GITHUB_OUTPUT
          echo "RELEASE_PATH=/tmp/release" >> $GITHUB_ENV

      - name: 检查发布文件
        if: steps.organize.outputs.status == 'success'
        run: |
          echo "检查发布目录内容:"
          ls -la /tmp/release/
          echo "检查IPK文件:"
          find /tmp/release/ -name "*.ipk" -exec ls -la {} \;

      - name: 上传到 Artifacts
        uses: actions/upload-artifact@v4
        if: steps.organize.outputs.status == 'success'
        with:
          name: luci-app-pushbot_${{matrix.arch}}_${{env.DATE}}
          path: /tmp/release/

      - name: 检查Release条件 (Master分支)
        if: steps.organize.outputs.status == 'success'
        run: |
          echo "当前分支: ${{ github.ref }}"
          echo "是否为master分支: ${{ github.ref == 'refs/heads/master' }}"
          echo "是否为testing分支: ${{ github.ref == 'refs/heads/testing' }}"
          echo "事件类型: ${{ github.event_name }}"

      - name: 发布到 Release (Master分支)
        uses: softprops/action-gh-release@v1
        if: steps.organize.outputs.status == 'success' && github.ref == 'refs/heads/master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{env.DATE}}-${{matrix.arch}}
          name: PushBot ${{env.DATE}} - ${{matrix.name}}
          body: |
            ## PushBot 插件 - ${{matrix.name}} 版本
            
            ### 编译信息
            - 编译时间: ${{env.DATE}}
            - 目标架构: ${{matrix.arch}}
            - 适配设备: ${{matrix.name}}
            
            ### 主要功能
            - ✅ 企业微信应用推送（支持文本和图文消息）
            - ✅ 智能主机名获取（替代OUI功能）
            - ✅ 完美支持二级路由环境
            - ✅ IP变更通知（显示新旧地址对比）
            - ✅ 支持多种推送方式：钉钉、企业微信、飞书、PushPlus、Bark等
            
            ### 安装方法
            ```bash
            # 上传 IPK 文件到路由器后执行
            opkg update
            opkg install luci-app-pushbot_*.ipk
            ```
            
            ### 依赖项
            - iputils-arping
            - curl
            - jq (JSON 处理)
            - wrtbwmon (可选，用于流量统计)
            
            ### 更新日志
            详见: https://github.com/${{ github.repository }}/commits/master
            
          files: ${{env.RELEASE_PATH}}/*.ipk
          draft: false
          prerelease: false

      - name: 发布到 Release (Testing分支)
        uses: softprops/action-gh-release@v1
        if: steps.organize.outputs.status == 'success' && github.ref == 'refs/heads/testing'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: testing-v${{env.DATE}}-${{matrix.arch}}
          name: PushBot Testing ${{env.DATE}} - ${{matrix.name}}
          body: |
            ## PushBot 插件 - Testing版本 ${{matrix.name}}
            
            ### 编译信息
            - 编译时间: ${{env.DATE}}
            - 目标架构: ${{matrix.arch}}
            - 适配设备: ${{matrix.name}}
            - 分支: testing
            
            ### 主要功能
            - ✅ 企业微信应用推送（支持文本和图文消息）
            - ✅ 智能主机名获取（替代OUI功能）
            - ✅ 完美支持二级路由环境
            - ✅ IP变更通知（显示新旧地址对比）
            - ✅ 支持多种推送方式：钉钉、企业微信、飞书、PushPlus、Bark等
            
            ### 安装方法
            ```bash
            # 上传 IPK 文件到路由器后执行
            opkg update
            opkg install luci-app-pushbot_*.ipk
            ```
            
            ### 依赖项
            - iputils-arping
            - curl
            - jq (JSON 处理)
            - wrtbwmon (可选，用于流量统计)
            
            ### 更新日志
            详见: https://github.com/${{ github.repository }}/commits/testing
            
          files: ${{env.RELEASE_PATH}}/*.ipk
          draft: false
          prerelease: true

  cleanup:
    runs-on: ubuntu-22.04
    needs: build # 确保在 build Job 成功后再执行
    if: success() # 在编译成功后执行清理
    
    name: 清理旧 Release 和 Tag
    steps:
      - name: 检查当前分支
        run: |
          echo "当前分支: ${{ github.ref }}"
          echo "是否为master分支: ${{ github.ref == 'refs/heads/master' }}"
          echo "是否为testing分支: ${{ github.ref == 'refs/heads/testing' }}"

      - name: 删除旧的 Release (Master分支)
        if: github.ref == 'refs/heads/master'
        uses: dev-drprasad/delete-older-releases@v0.2.1
        with:
          keep_latest: 2
          delete_tags: true # 同时删除对应的 Tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 删除旧的 Release (Testing分支)
        if: github.ref == 'refs/heads/testing'
        uses: dev-drprasad/delete-older-releases@v0.2.1
        with:
          keep_latest: 2
          delete_tags: true # 同时删除对应的 Tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
